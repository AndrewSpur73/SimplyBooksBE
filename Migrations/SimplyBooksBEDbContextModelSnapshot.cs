// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimplyBooksBE;

#nullable disable

namespace SimplyBooksBE.Migrations
{
    [DbContext(typeof(SimplyBooksBEDbContext))]
    partial class SimplyBooksBEDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimplyBooksBE.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool?>("Favorite")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "emily.turner@example.com",
                            Favorite = false,
                            FirstName = "Emily",
                            Image = "https://example.com/images/emily.jpg",
                            LastName = "Turner",
                            Uid = "a1b2c3d4e5f6"
                        },
                        new
                        {
                            Id = 2,
                            Email = "michael.smith@example.com",
                            Favorite = true,
                            FirstName = "Michael",
                            Image = "https://example.com/images/michael.jpg",
                            LastName = "Smith",
                            Uid = "b7c8d9e0f1g2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "olivia.johnson@example.com",
                            Favorite = false,
                            FirstName = "Olivia",
                            Image = "https://example.com/images/olivia.jpg",
                            LastName = "Johnson",
                            Uid = "h3i4j5k6l7m8"
                        },
                        new
                        {
                            Id = 4,
                            Email = "james.williams@example.com",
                            Favorite = true,
                            FirstName = "James",
                            Image = "https://example.com/images/james.jpg",
                            LastName = "Williams",
                            Uid = "n9o0p1q2r3s4"
                        });
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<bool?>("Sale")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "A comprehensive guide to C# programming.",
                            Image = "https://example.com/images/csharp.jpg",
                            Price = 29.99m,
                            Sale = false,
                            Title = "Introduction to C#",
                            Uid = "book12345"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "Advanced concepts in ASP.NET Core development.",
                            Image = "https://example.com/images/aspnet.jpg",
                            Price = 39.99m,
                            Sale = true,
                            Title = "Mastering ASP.NET",
                            Uid = "book67890"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Description = "Learn the basics of JavaScript from scratch.",
                            Image = "https://example.com/images/javascript.jpg",
                            Price = 24.99m,
                            Sale = true,
                            Title = "JavaScript Essentials",
                            Uid = "book24680"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Description = "An introduction to building web apps with React.",
                            Image = "https://example.com/images/react.jpg",
                            Price = 19.99m,
                            Sale = false,
                            Title = "React for Beginners",
                            Uid = "book11223"
                        });
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Book", b =>
                {
                    b.HasOne("SimplyBooksBE.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SimplyBooksBE.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
